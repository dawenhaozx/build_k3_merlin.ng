name: Build K3

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false 
        default: 'false'
    
env:
  images_dir: /opt/images
  ET0MACADDR: "98:BB:99:2F:4B:37"    
  MACADDR1_24G: "98:BB:99:2F:4B:38"
  MACADDR2_5G: "98:BB:99:2F:4B:39"

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
       sudo dpkg --add-architecture i386
       sudo dpkg-reconfigure dash
       sudo apt update -y
       sudo apt full-upgrade -y
       sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
       bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
       git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \
       libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz \
       mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils \
       rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
       sudo apt-get install libtool-bin cmake libproxy-dev uuid-dev liblzo2-dev autoconf automake bash bison \
       bzip2 diffutils file flex m4 g++ gawk groff-base libncurses5-dev libtool libslang2 make patch perl pkg-config shtool \
       subversion tar texinfo zlib1g zlib1g-dev git gettext libexpat1-dev libssl-dev cvs gperf unzip \
       python libxml-parser-perl gcc-multilib gconf-editor libxml2-dev g++-multilib libncurses5 mtd-utils \
       libncurses5-dev libvorbis-dev git autopoint autogen automake-1.15 sed build-essential intltool libglib2.0-dev \
       xutils-dev lib32z1-dev lib32stdc++6 xsltproc gtk-doc-tools libelf1:i386
        
    - name: Clone source code
      run: |       
        git clone https://github.com/dawenhaozx/asuswrt-merlin.ng
        git clone https://github.com/ghostnup/k3screenctrl asuswrt-merlin.ng/release/src/router/k3screenctrl 
        git clone https://github.com/RMerl/am-toolchains.git
        sudo mkdir -p /opt/images/
        sudo mkdir -p /home/runner/work/build_k3_merlin.ng/build_k3_merlin.ng/asuswrt-merlin.ng/release/src-rt-6.x.4708/toolchains
      
    - name: Link Directory
      run: |       
       sudo ln -s /home/runner/work/build_k3_merlin.ng/build_k3_merlin.ng/am-toolchains/brcm-arm-sdk/hndtools-arm-linux-2.6.36-uclibc-4.5.3 /opt/brcm-arm
       ln -s /home/runner/work/build_k3_merlin.ng/build_k3_merlin.ng/am-toolchains/brcm-arm-sdk  /home/runner/work/build_k3_merlin.ng/build_k3_merlin.ng/asuswrt-merlin.ng/release/src-rt-6.x.4708/toolchains
       echo "PATH=\$PATH:/opt/brcm-arm/bin" >> ~/.profile
        
       
    - name: Modify File
      run: |        
        cd  /home/runner/work/build_k3_merlin.ng/build_k3_merlin.ng/asuswrt-merlin.ng/release/src-rt-7.14.114.x/src/cfe/build/broadcom/bcm947xx/compressed
        echo "replace mac address from $(cat rt-k3_nvram.txt | grep ^et0macaddr) to ${{ env.ET0MACADDR }}"
        sed -i 's/^\(et0macaddr=\).*/\1${{ env.ET0MACADDR }}/g' rt-k3_nvram.txt
        echo "replace mac 2.4g address from $(cat rt-k3_nvram.txt | grep ^1:macaddr) to ${{ env.MACADDR1_24G }}"
        sed -i 's/^\(1:macaddr=\).*/\1${{ env.MACADDR1_24G }}/g' rt-k3_nvram.txt
        echo "replace mac 5g address from $(cat rt-k3_nvram.txt | grep ^2:macaddr) to ${{ env.MACADDR2_5G }}"
        sed -i 's/^\(2:macaddr=\).*/\1${{ env.MACADDR2_5G }}/g' rt-k3_nvram.txt
        
    - name: Build Firmware
      run: |
      
        cd /home/runner/work/build_k3_merlin.ng/build_k3_merlin.ng/asuswrt-merlin.ng/release/src-rt-7.14.114.x/src
        make rt-k3
        echo "build image done"     
        
        cd /home/runner/work/build_k3_merlin.ng/build_k3_merlin.ng/asuswrt-merlin.ng/release/src-rt-7.14.114.x/src/cfe
        make
        echo "build cfe done"
        
    - name: Move file
      run: |
        sudo mv -f /home/runner/work/build_k3_merlin.ng/build_k3_merlin.ng/asuswrt-merlin.ng/release/src-rt-7.14.114.x/src/image/*.trx /opt/images/
        sudo cp /home/runner/work/build_k3_merlin.ng/build_k3_merlin.ng/asuswrt-merlin.ng/release/src-rt-7.14.114.x/src/cfe/build/broadcom/bcm947xx/compressed/rt-k3_nvram.txt /opt/images/
        sudo cp /home/runner/work/build_k3_merlin.ng/build_k3_merlin.ng/asuswrt-merlin.ng/release/src-rt-7.14.114.x/src/cfe/cfe*.bin /opt/images/

    - name: Upload images to Artifact
      if: ${{ success() }}
      uses: actions/upload-artifact@v2.2.1
      with:
          name: k3ml
          path: ${{ env.images_dir }}
          
#     - name: Upload images to Artifact2
#       if: ${{ success() }}
#       uses: actions/upload-artifact@v2.2.1
#       with:
#           name: k3ml2
#           path: ${{ env.images_dir }}
